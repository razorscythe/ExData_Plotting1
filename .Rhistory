q()
1+1
2+3
num [1:4, 1:2] 1 2 3 4 5 6 7 8
num[1:4, 1:2] 1 2 3 4 5 6 7 8
num [1:4, 1:2] 1 2 3 4 5 6 7 8
matrix(c(1,2,3,4,5,6,7,8), nrow=4, ncol=2)
matrix(c(1,2,3,4,5,6,7,8), nrow=4, ncol=2)
install.packages("ggplot2")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;$PATH}"', con ="~/Renviron")
Sys.which("make")
Sys.which("make")
install.packages("devtools")
library(devtools)
install_github("r-lib/devtools")
install_github("r-lib/devtools")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME)\\usr\\bin;${PATH}"', con = "~/Renviron")
Sys.which("make")
Sys.which()
install.packages("jsonlite", type = "source")
install.packages("ggplot2")
library()
library(ggplot2)
old.packages()
update.packages()
version
sessioninfo()
sessionInfo()
install.packages("vioplot")
install.packages("devtools")
devtools::install_github("jackesherman/packages")
devtools::install_github("jackesherman/packages")
install.packages("ggplot2")
install.packages("ggplot2")
browseVignettes("ggplot2")
remove.packages("vioplot")
help(package ="vioplot")
install.packages("vioplot")
help(vioplot)
attached base packageStatus()
library("foreign")
dat.spss <- read.spss("http://faculty.washington.edu/tathornt/sisg2013/hsb2.sav",
to.data.frame=TRUE)
dat.dta <- read.dta("http://faculty.washington.edu/tathornt/sisg2013/hsb2.dta")
read.dta("http://faculty.washington.edu/tathornt/sisg2013/hsb2.dta")
read.spss("http://faculty.washington.edu/tathornt/sisg2013/hsb2.sav",
to.data.frame=TRUE)
library("survey")
install.packages("survey")
library("survey")
data(api, package="survey")
plot(api00~api99,data=apipop)
colors<-c("tomato","forestgreen","purple")[apipop$stype]
plot(api00~api99,data=apipop,col=colors)
install.packages("hexbin")
library("hexbin")
library("hexbin")
with(apipop, plot(hexbin(api99,api00), style="centroids"))
install.packages("KernSmooth")
library("Kernsmooth")
library("KernSmooth")
getwd()
setwd("C:/Users/tiwar/Desktop/DS/data/R/ExData_Plotting1")
getwd()
library(data.table)
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
data0 <- fread(fileURL, path(getwd(), data.zip))
data0 <- fread(fileURL, file.path(getwd(), data.zip))
data0 <- fread(fileURL, file.path(getwd(), "data.zip"))
path <- getwd()
data0 <- fread(fileURL, file.path(path, "data.zip"))
download.file(fileURL, file.path(path, "data.zip"))
unzip(zipfile = "data.zip")
data0 <- fread(file.path(path, "household_power_consumption.txt"))
names(data0)
library(lubridate)
dim(data0)
?strptime
dates <- dmy(data0$Date)
class(dates)
data0 <- fread(file.path(path, "household_power_consumption.txt"), na.strings = "?")
names(data0)
class(data0$Date)
names(data0)
class(Global_active_power)
class(data0$Global_active_power)
library(lubridate)
dataf <- data0[ , Date := dmy(Date)]
names(dataf)
class(dataf$Date)
datafinal <- dataf[(Date>= "01-02-2007")& (Date<="02-01-2008")]
head(datafinal)
datafinal <- dataf[(Date>= "01-02-2007")& (Date<="02-01-2007")]
head(datafinal)
datafinal <- dataf[,(Date>=dmy(01022007) )& (Date<=dmy(02022007))]
head(datafinal)
datafinal <- dataf[(Date>=dmy(01022007) )& (Date<=dmy(02022007))]
head(datafinal)
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
head(datafinal)
##Plotting
with(datafinal, hist(Global_active_power, col='red', xlab = 'Global Active Power (kilowatts)', main = "Global Active Power"))
##Plotting
png(filename = "plot1.png", width = 480, height = 480)
with(datafinal, hist(Global_active_power, col='red', xlab = 'Global Active Power (kilowatts)', main = "Global Active Power"))
dev.off()
dataf <- data0[ , Date := dmy(Date)& Time := hms(Time)]
data0 <- fread(file.path(path, "household_power_consumption.txt"), na.strings = "?")
dataf <- data0[ , Date := dmy(Date)& Time := hms(Time)]
dataf <- data0[ , Date := dmy(Date)]
dataf <- dataf[ , Time := hms(Time)]
##subsetting between required dates
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
dataf <- dataf [ , dateTime := paste(Date, Time)]
##subsetting between required dates
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
head(datafinal)
data0 <- fread(file.path(path, "household_power_consumption.txt"), na.strings = "?")
library(lubridate)
dataf <- data0[ , ':='(Date = dmy(Date), Time = hms(Time), dateTime = paste(DateTime))
dataf <- data0[ , ':='(Date = dmy(Date), Time = hms(Time), dateTime = paste(DateTime))]
dataf <- data0[ , ':='(Date = dmy(Date), Time = hms(Time), dateTime = paste(DateTime))]
dataf <- data0[ , ':='(Date = dmy(Date), Time = hms(Time), dateTime = paste(Date, Time))]
head(dataf)
data0[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
head(data0)
dataf <- data0[ , ':='(Date = dmy(Date), Time = hms(Time), dateTime = paste(Date, Time))]
##subsetting between required dates
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
head(datafinal)
##subsetting between required dates
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
dim(dataf)
##subsetting between required dates
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
datafinal <- dataf[(Date>=dmy(01022007))& (Date<=dmy(02022007))]
dim(datafinal)
library(lubridate)
data1 <- data0[ ,':='(Date = dmy(Date), Time = hms(Time))]
dim(data1)
data0 <- fread(file.path(path, "household_power_consumption.txt"), na.strings = "?")
data1 <- data0[ ,':='(Date = dmy(Date), Time = hms(Time))]
dim(data1)
##subsetting between required dates
data2 <- data1[(Date>= dmy(01022007) & Date<= dmy(02022007))]
dim(data2)
data1 <- data0[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
dim(data1)
##subsetting between required dates
data2 <- data1[(Date>= dmy(01022007) & Date<= dmy(02022007))]
dim(data2)
##plotting
png(filename = "plot2.png", width = 480, height = 480)
dev.off()
##plotting
with(data2, plot(x= dateTime, y= Global_active_power, type = '1', xlab= "", ylab= "Global Active Power (in kilowatts)"))
##subsetting between required dates
data2 <- data1[(dateTime>= dmy(01022007) & dateTime<= dmy(02022007))]
dim(data2)
data1 <- data0[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
##subsetting between required dates
data2 <- data1[(dateTime>= dmy(01022007) & dateTime<= dmy(02022007))]
dim(data2)
##subsetting between required dates
data2 <- data1[(dateTime>= "2007-02-01" & dateTime<= "2007-02-02"]
##subsetting between required dates
data2 <- data1[(dateTime>= "2007-02-01" & dateTime<= "2007-02-02")]
dim(data2)
##subsetting between required dates
data2 <- data1[(dateTime>= "2007-02-01") & (dateTime<= "2007-02-02")]
dim(data2)
dim(data1)
##subsetting between required dates
data2 <- data1[(dateTime>= "2007-02-01") & (dateTime< "2007-02-03")]
dim(data2)
##subsetting between required dates
data2 <- data1[(Date>= "2007-02-01") & (Date< "2007-02-03")]
dim(data2)
##plotting
with(data2, plot(x= dateTime, y= Global_active_power, type = '1', xlab= "", ylab= "Global Active Power (in kilowatts)"))
##plotting
plot(x = data2[, dateTime]
, y = data2[, Global_active_power]
, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Prevents Scientific Notation
powerDT[, Global_active_power := lapply(.SD, as.numeric), .SDcols = c("Global_active_power")]
# Making a POSIXct date capable of being filtered and graphed by time of day
powerDT[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
plot(x = powerDT[, dateTime]
, y = powerDT[, Global_active_power]
, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?"
)
# Making a POSIXct date capable of being filtered and graphed by time of day
powerDT[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
plot(x = powerDT[, dateTime]
, y = powerDT[, Global_active_power]
, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
data0 <- fread(file.path(path, "household_power_consumption.txt"), na.strings = "?")
# Making a POSIXct date capable of being filtered and graphed by time of day
data0[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
data0 <- data0[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
with(data0 , plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power (kilowatts)", type='1'))
with(data0 , plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power (kilowatts)", type="1"))
with(data0 , plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power (kilowatts)", type="c"))
ls(rm=list())
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?")
# Making a POSIXct date capable of being filtered and graphed by time of day
powerDT[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
plot(x = powerDT[, dateTime]
, y = powerDT[, Global_active_power]
, type="l", xlab="", ylab="Global Active Power (kilowatts)")
#plotting
png(filename = "plot2.png", height = 480, width = 480)
plot(x = powerDT[, dateTime]
, y = powerDT[, Global_active_power]
, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?")
# Making a POSIXct date capable of being filtered and graphed by time of day
powerDT[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
#plotting
with(powerDT, plot(dateTime, Sub_metering_1), xlab="", ylab= "Energy sub metering", type='1')
#plotting
with(powerDT, plot(dateTime, Sub_metering_1), xlab="", ylab= "Energy sub metering", type="1")
#plotting
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="1"))
#plotting
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
?legends
?legend
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1))
#plotting
png(filename = "plot3.png", width = 480, height = 480)
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1))
dev.off()
powerDT <- data.table::fread(input = "household_power_consumption.txt"
, na.strings="?")
# Making a POSIXct date capable of being filtered and graphed by time of day
powerDT[, dateTime := as.POSIXct(paste(Date, Time), format = "%d/%m/%Y %H:%M:%S")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(dateTime >= "2007-02-01") & (dateTime < "2007-02-03")]
#plotting
par(mfrow=c(2,2))
with(powerDT, plot(Global_active_power, dateTime, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(Global_active_power, dateTime, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(Global_active_power, dateTime, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(Global_active_power, dateTime, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Voltage, xlab="Voltage", ylab= "datetime", type="l"))
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1), box.lwd = 0)
with(powerDT, plot(dateTime, Voltage, xlab="Voltage", ylab= "datetime", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Voltage, xlab="Voltage", ylab= "datetime", type="l"))
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1), bty = "n", cex = 0.5)
with(powerDT, plot(dateTime, Global_reactive_power, type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Voltage, xlab="Voltage", ylab= "datetime", type="l"))
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1), bty = "n", cex = 0.5)
with(powerDT, plot(dateTime, Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power"))
#plotting
png(filename = "plot4.png", height = 480, width = 480)
par(mfrow=c(2,2))
with(powerDT, plot(dateTime, Global_active_power, xlab="", ylab="Global Active Power", type="l"))
with(powerDT, plot(dateTime, Voltage, xlab="Voltage", ylab= "datetime", type="l"))
with(powerDT, plot(dateTime, Sub_metering_1, xlab="", ylab= "Energy sub metering", type="l"))
with(powerDT, lines(dateTime, Sub_metering_2, col="red"))
with(powerDT, lines(dateTime, Sub_metering_3, col="blue"))
legend("topright", col = c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1), lwd = c(1,1,1), bty = "n", cex = 0.5)
with(powerDT, plot(dateTime, Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power"))
dev.off()
